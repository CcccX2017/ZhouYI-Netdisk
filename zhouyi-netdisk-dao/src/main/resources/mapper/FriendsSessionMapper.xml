<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codex.netdisk.dao.FriendsSessionMapper">
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.codex.netdisk.model.entity.FriendsSession">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="friend" property="friend"/>
        <result column="is_visited_by_user" property="visitedByUser"/>
        <result column="is_visited_by_friend" property="visitedByFriend"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        username,
        friend,
        is_visited_by_user,
        is_visited_by_friend,
        gmt_create,
        gmt_modified
    </sql>

    <resultMap id="SessionListMap" type="cn.codex.netdisk.model.entity.FriendsSession" extends="BaseResultMap">
        <association property="userInfo" javaType="cn.codex.netdisk.model.entity.User">
            <id column="user_id" property="userId" />
            <result column="nickname" property="nickname"/>
            <result column="avatar" property="avatar"/>
        </association>
        <association property="friends" javaType="cn.codex.netdisk.model.entity.Friends">
            <result column="friend_to_user_remark" property="friendToUserRemark"/>
            <result column="user_to_friend_remark" property="userToFriendRemark"/>
        </association>
    </resultMap>
    <select id="selectSessionList" resultMap="SessionListMap" parameterType="String">
        select fs.id,
               fs.username,
               fs.friend,
               fs.new_title,
               fs.new_sharing_time,
               fs.visited_user,
               fs.visited_friend,
               u.user_id,
               u.nickname,
               u.avatar,
               f.friend_to_user_remark,
               f.user_to_friend_remark
        from tb_friends_session fs,
             tb_user u,
             tb_friends f
        where ((fs.username = #{username} and fs.is_visited_by_user = 1 and fs.friend = u.username)
                or (fs.friend = #{username} and fs.is_visited_by_friend = 1 and fs.username = u.username))
          and ((fs.username = f.username and fs.friend = f.friendname) or
               (fs.username = f.friendname and fs.friend = f.username))
        order by fs.gmt_modified desc
    </select>
</mapper>
